---
on:
  push:
    branches:
      - "**"
    tags:
      - "**.**.**"

name: build

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: clippy
      - uses: swatinem/rust-cache@v1
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings

  build-cross:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            rust: stable
          - target: armv7-unknown-linux-musleabihf
            rust: stable
          - target: aarch64-unknown-linux-musl
            rust: stable
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          profile: minimal
          override: true
      - id: rust-cache
        uses: swatinem/rust-cache@v1
        with:
          key: "${{ matrix.target }}"
      - run: cargo install cross --version 0.2.1
        if: ${{ steps.rust-cache.outputs.cache-hit != 'true' }}
      - run: cross build --release --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v2
        with:
          name: "bin-${{ matrix.target }}"
          path: "target/${{ matrix.target }}/release/github-exporter"

  build-docker-image:
    if: "${{ startsWith(github.event.ref, 'refs/tags/') }}"
    runs-on: ubuntu-latest
    needs: build-cross
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            rust: stable
            docker-platform: linux/amd64
            tag-suffix: linux-amd64
          - target: armv7-unknown-linux-musleabihf
            rust: stable
            docker-platform: linux/arm/v7
            tag-suffix: linux-armv7
          - target: aarch64-unknown-linux-musl
            rust: stable
            docker-platform: linux/arm64/v8
            tag-suffix: linux-armv8
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: "bin-${{ matrix.target }}"
          path: "target/${{ matrix.target }}/release/github-exporter"
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - id: tag
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      - uses: docker/build-push-action@v2
        with:
          tags: "razielgn/github-exporter:${{ steps.tag.outputs.TAG}}-${{ matrix.tag-suffix }},razielgn/github-exporter:latest-${{ matrix.tag-suffix }}"
          context: "target/${{ matrix.target }}/release"
          platforms: "${{ matrix.docker-platform }}"
          file: ci/dockerfiles/Dockerfile.ci-release
          push: true

  build-docker-manifest:
    if: "${{ startsWith(github.event.ref, 'refs/tags/') }}"
    runs-on: ubuntu-latest
    needs: build-docker-image
    steps:
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - run: |
          docker manifest create \
            razielgn/github-exporter:latest \
            razielgn/github-exporter:latest-linux-amd64 \
            razielgn/github-exporter:latest-linux-armv7 \
            razielgn/github-exporter:latest-linux-armv8
      - run: docker manifest push razielgn/github-exporter:latest
      - id: tag
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
      - run: |
          docker manifest create \
            razielgn/github-exporter:${{ steps.tag.outputs.TAG }} \
            razielgn/github-exporter:${{ steps.tag.outputs.TAG }}-linux-amd64 \
            razielgn/github-exporter:${{ steps.tag.outputs.TAG }}-linux-armv7 \
            razielgn/github-exporter:${{ steps.tag.outputs.TAG }}-linux-armv8
      - run: docker manifest push razielgn/github-exporter:${{ steps.tag.outputs.TAG }}

  # TODO: peter-evans/dockerhub-description@v2
